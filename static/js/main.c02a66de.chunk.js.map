{"version":3,"sources":["components/About.js","components/Footer.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setmyStyle","btntext","setBtnText","className","style","id","type","onClick","Footer","href","role","Navbar","props","title","aboutText","TextForm","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","split","length","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c02a66de.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport default function About() {\n    const [myStyle, setmyStyle] = useState({\n        color: 'black',\n        backgroundColor: 'white'\n    })\n    const toggleStyle = () => {\n        if(myStyle.color === 'black') {\n            setmyStyle({\n                color: 'white',\n                backgroundColor: 'black'\n            })\n            setBtnText(\"Enable Light Mode\")\n        }\n        else{\n            setmyStyle({\n                color: 'black',\n                backgroundColor: 'white'\n            })\n            setBtnText(\"Enable Dark Mode\")\n        }\n    }\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\n    return (\n        <div className=\"container\" style={myStyle}>\n        <h2 className=\"text-center\">About Us</h2>\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            Accordion Item #1\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle} >\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                            Accordion Item #2\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle} >\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            Accordion Item #3\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle} >\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary my-3\">{btntext}</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport '../App.css';\n\nexport default function Footer() {\n    return (\n        <div className=\"myFooter\">\n            <div className=\"container my-4\">\n                <footer className=\"page-footer font-small blue pt-4\">\n\n                    <div className=\"container-fluid text-center text-md-left\">\n                        <div className=\"row\">\n                            <div className=\"text-center\">\n                                <h5 className=\"text-uppercase\">TEXT-UTILS</h5>\n                                <p className=\"tex\">Here you can analyze your written text like how many words and characters are there in it and many more stuffs.</p>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"social_icons\">\n                        <section className=\"mb-4 text-center\">\n                            <a\n                                className=\"btn btn-outline-light btn-floating m-1\"\n                                href=\"#!\"\n                                role=\"button\"\n                            ><i className=\"fab fa-twitter\"></i></a>\n                            <a\n                                className=\"btn btn-outline-light btn-floating m-1\"\n                                href=\"/\"\n                                role=\"button\"\n                            ><i className=\"fab fa-google\"></i></a>\n                            <a\n                                className=\"btn btn-outline-light btn-floating m-1\"\n                                href=\"/\"\n                                role=\"button\"\n                            ><i className=\"fab fa-instagram\"></i></a>\n                            <a\n                                className=\"btn btn-outline-light btn-floating m-1\"\n                                href=\"/\"\n                                role=\"button\"\n                            ><i className=\"fab fa-linkedin-in\"></i></a>\n                            <a className=\"btn btn-outline-light btn-floating m-1\" href=\"/\" role=\"button\"><i className=\"fab fa-github\"></i></a>\n                        </section>\n                    </div>\n                    <div className=\"footer-copyright text-center py-3\">\n                        <h6 className=\"copyright\">© 2020 Copyright: Amalendu Pandey</h6>\n                    </div>\n\n                </footer>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.propTypes = {title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired};\nNavbar.defaultProps = {aboutText:'About Us', title: 'Required Title'};","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const [text, setText] = useState(''); //state-variable\n    const handleUPclick = () => {\n        let newText = text.toUpperCase();\n        setText(newText);\n    }\n    const handleOnChange = (event) => {\n        setText(event.target.value);\n    }\n    const handleLOWclick = () => {\n        let newText = text.toLowerCase();\n        setText(newText);\n    }\n    const handleClearText = () => {\n        let newText = '';\n        setText(newText);\n    }\n    return (\n        <>\n            <div className=\"container\">\n                <h1 className=\"text-center\">{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control text-center\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\"></textarea>\n                </div>\n                <div id=\"buttons\">\n                    <button className=\"btn btn-primary mx-2\" id='btn-bhsra1' onClick={handleUPclick}>Convert to UPPERCASE</button>\n                    <button className=\"btn btn-primary mx-2\" id='btn-bhsra2' onClick={handleLOWclick}>Convert to lowecase</button>\n                     <button className=\"btn btn-primary mx-2\" id='btn-bhsra2' onClick={handleClearText}>Clear Text</button>\n                </div>\n            </div>\n            <div className=\"container my-3\">\n                <h2 className=\"text-center mt-10\">Your Text Summary</h2>\n                <p className=\"text-center\">{text.split(\" \").length} words and {text.length} characters</p>\n                <p className=\"text-center\">{0.008* text.split(\" \").length} Minutes needed to read.</p>\n                <h2 className=\"text-center mt-10\">PREVIEW OF YOUR GIVEN TEXT</h2>\n                <p className=\"text-center\">{text}</p>\n            </div>\n        </>\n    )\n}\n","\nimport './App.css';\nimport About from './components/About'\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\n\nfunction App() {\n  return (\n      <>\n        <Navbar title=\"TextUtils\"/>\n        <div className=\"container my-3\">\n          <TextForm heading='Enter a text to analyse below'/>\n        </div>\n        <About/>\n        <div className=\"footer\">\n          <Footer/>\n        </div>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}